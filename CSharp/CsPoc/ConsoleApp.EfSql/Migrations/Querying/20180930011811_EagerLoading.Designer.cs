// <auto-generated />
using System;
using ConsoleApp.EfSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp.EfSql.Migrations.Querying
{
    [DbContext(typeof(QueryingContext))]
    [Migration("20180930011811_EagerLoading")]
    partial class EagerLoading
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OwnerRenId");

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.HasIndex("OwnerRenId");

                    b.ToTable("QBlogs");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RenMen");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.HasKey("PictureId");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorRenId");

                    b.Property<int?>("BlogId");

                    b.HasKey("PostId");

                    b.HasIndex("AuthorRenId");

                    b.HasIndex("BlogId");

                    b.ToTable("QPost");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.PTag", b =>
                {
                    b.Property<int>("PTagId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("PostId");

                    b.HasKey("PTagId");

                    b.HasIndex("PostId");

                    b.ToTable("PTag");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Ren", b =>
                {
                    b.Property<int>("RenId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PhotoPictureId");

                    b.HasKey("RenId");

                    b.HasIndex("PhotoPictureId");

                    b.ToTable("Ren");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Student", b =>
                {
                    b.HasBaseType("ConsoleApp.EfSql.QueryModel.Person");

                    b.Property<int?>("SchoolId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Student");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Blog", b =>
                {
                    b.HasOne("ConsoleApp.EfSql.QueryModel.Ren", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerRenId");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Post", b =>
                {
                    b.HasOne("ConsoleApp.EfSql.QueryModel.Ren", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorRenId");

                    b.HasOne("ConsoleApp.EfSql.QueryModel.Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.PTag", b =>
                {
                    b.HasOne("ConsoleApp.EfSql.QueryModel.Post")
                        .WithMany("Tags")
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Ren", b =>
                {
                    b.HasOne("ConsoleApp.EfSql.QueryModel.Picture", "Photo")
                        .WithMany()
                        .HasForeignKey("PhotoPictureId");
                });

            modelBuilder.Entity("ConsoleApp.EfSql.QueryModel.Student", b =>
                {
                    b.HasOne("ConsoleApp.EfSql.QueryModel.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId");
                });
#pragma warning restore 612, 618
        }
    }
}
